{"ast":null,"code":"import { createSlice } from 'redux-starter-kit';\nconst {\n  actions,\n  reducer\n} = createSlice({\n  slice: 'Home',\n  initialState: {\n    counter: 0,\n    resetLoading: false\n  },\n  reducers: {\n    incrementCounter(state, action) {\n      state.counter = action.payload + 1;\n    },\n\n    decrementCounter(state, action) {\n      state.counter = action.payload - 1;\n    },\n\n    resetCounterLaunched(state, action) {\n      state.resetLoading = true;\n    },\n\n    resetCounterSuccess(state, action) {\n      state.counter = 0;\n      state.resetLoading = false;\n    },\n\n    resetCounterFailure(state, action) {\n      state.resetLoading = false;\n    }\n\n  }\n});\nexport const {\n  incrementCounter,\n  decrementCounter,\n  resetCounterLaunched,\n  resetCounterSuccess,\n  resetCounterFailure\n} = actions;\nexport const resetCounter = () => async (dispatch, getState) => {\n  try {\n    dispatch(resetCounterLaunched());\n    await new Promise((resolve, reject) => {\n      setTimeout(resolve, 500);\n    });\n    dispatch(resetCounterSuccess());\n  } catch (error) {\n    dispatch(resetCounterFailure());\n  }\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/richardsong/code/MisfitsMarket/src/pages/HomePage/homePage.js"],"names":["createSlice","actions","reducer","slice","initialState","counter","resetLoading","reducers","incrementCounter","state","action","payload","decrementCounter","resetCounterLaunched","resetCounterSuccess","resetCounterFailure","resetCounter","dispatch","getState","Promise","resolve","reject","setTimeout","error"],"mappings":"AAAA,SACEA,WADF,QAEO,mBAFP;AAIA,MAAM;AACJC,EAAAA,OADI;AAEJC,EAAAA;AAFI,IAGFF,WAAW,CAAC;AACdG,EAAAA,KAAK,EAAE,MADO;AAEdC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,CADG;AAEZC,IAAAA,YAAY,EAAE;AAFF,GAFA;AAMdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACC,OAAP,GAAiB,CAAjC;AACD,KAHO;;AAIRC,IAAAA,gBAAgB,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACC,OAAP,GAAiB,CAAjC;AACD,KANO;;AAORE,IAAAA,oBAAoB,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAClCD,MAAAA,KAAK,CAACH,YAAN,GAAqB,IAArB;AACD,KATO;;AAURQ,IAAAA,mBAAmB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACjCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,CAAhB;AACAI,MAAAA,KAAK,CAACH,YAAN,GAAqB,KAArB;AACD,KAbO;;AAcRS,IAAAA,mBAAmB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACjCD,MAAAA,KAAK,CAACH,YAAN,GAAqB,KAArB;AACD;;AAhBO;AANI,CAAD,CAHf;AA6BA,OAAO,MAAM;AACXE,EAAAA,gBADW;AAEXI,EAAAA,gBAFW;AAGXC,EAAAA,oBAHW;AAIXC,EAAAA,mBAJW;AAKXC,EAAAA;AALW,IAMTd,OANG;AASP,OAAO,MAAMe,YAAY,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,MAAI;AACFD,IAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACA,UAAM,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCC,MAAAA,UAAU,CAACF,OAAD,EAAU,GAAV,CAAV;AACD,KAFK,CAAN;AAIAH,IAAAA,QAAQ,CAACH,mBAAmB,EAApB,CAAR;AACD,GAPD,CAOE,OAAOS,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACD;AACF,CAXM;AAcP,eAAeb,OAAf","sourcesContent":["import {\n  createSlice\n} from 'redux-starter-kit';\n\nconst {\n  actions,\n  reducer\n} = createSlice({\n  slice: 'Home',\n  initialState: {\n    counter: 0,\n    resetLoading: false\n  },\n  reducers: {\n    incrementCounter(state, action) {\n      state.counter = action.payload + 1;\n    },\n    decrementCounter(state, action) {\n      state.counter = action.payload - 1;\n    },\n    resetCounterLaunched(state, action) {\n      state.resetLoading = true;\n    },\n    resetCounterSuccess(state, action) {\n      state.counter = 0;\n      state.resetLoading = false;\n    },\n    resetCounterFailure(state, action) {\n      state.resetLoading = false;\n    }\n  }\n});\n\nexport const {\n  incrementCounter,\n  decrementCounter,\n  resetCounterLaunched,\n  resetCounterSuccess,\n  resetCounterFailure\n} = actions;\n\n\nexport const resetCounter = () => async (dispatch, getState) => {\n  try {\n    dispatch(resetCounterLaunched());\n    await new Promise((resolve, reject) => {\n      setTimeout(resolve, 500);\n    });\n\n    dispatch(resetCounterSuccess())\n  } catch (error) {\n    dispatch(resetCounterFailure());\n  }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}