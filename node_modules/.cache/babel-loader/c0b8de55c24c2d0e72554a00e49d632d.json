{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar useMouse = function (ref) {\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n      console.error('useMouse expects a single ref argument.');\n    }\n  }\n\n  var frame = react_1.useRef(0);\n\n  var _a = react_1.useState({\n    docX: 0,\n    docY: 0,\n    posX: 0,\n    posY: 0,\n    elX: 0,\n    elY: 0,\n    elH: 0,\n    elW: 0\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  react_1.useEffect(function () {\n    var moveHandler = function (event) {\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(function () {\n        if (ref && ref.current) {\n          var _a = ref.current.getBoundingClientRect(),\n              left = _a.left,\n              top_1 = _a.top,\n              elW = _a.width,\n              elH = _a.height;\n\n          var posX = left + window.scrollX;\n          var posY = top_1 + window.scrollY;\n          var elX = event.pageX - posX;\n          var elY = event.pageY - posY;\n          setState({\n            docX: event.pageX,\n            docY: event.pageY,\n            posX: posX,\n            posY: posY,\n            elX: elX,\n            elY: elY,\n            elH: elH,\n            elW: elW\n          });\n        }\n      });\n    };\n\n    document.addEventListener('mousemove', moveHandler);\n    return function () {\n      cancelAnimationFrame(frame.current);\n      document.removeEventListener('mousemove', moveHandler);\n    };\n  }, [ref.current]);\n  return state;\n};\n\nexports.default = useMouse;","map":null,"metadata":{},"sourceType":"script"}